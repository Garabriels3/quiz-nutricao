'use client';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Button from '../components/Button';
import Select from '../components/Select';
import { mockSubjects } from './mocks/dataMocks';
import { Subject } from './types/models';

const funnyGreetings = [
  "Let√≠cia, pronta para mais um round de 'tortura cerebral nutricional'?",
  "Bem-vinda ao show do milh√£o... de calorias que voc√™ vai queimar pensando!",
  "Prepare-se para o √∫nico teste onde 'passar fome' √© opcional, mas recomendado!",
  "Let√≠cia, sua dieta de conhecimento come√ßa agora. Sem pausa para lanche!",
  "Pronta para provar que seu c√©rebro n√£o est√° t√£o frito quanto aquele √∫ltimo pastel?",
  "Vamos ver se voc√™ consegue digerir essas perguntas melhor que lactose!",
  "Hora de malhar esses neur√¥nios! Prometo que d√≥i menos que a academia.",
  "Let√≠cia, seu desafio de hoje: sobreviver a este quiz sem precisar de terapia depois!",
  "Prepare-se para suar mais respondendo essas perguntas do que na sua √∫ltima aula pr√°tica!",
  "Bem-vinda ao quiz! Onde as √∫nicas calorias que voc√™ vai contar s√£o as do seu esfor√ßo mental."
];

const foodEmojis = ["üçé", "ü•ë", "ü•ï", "üçì", "ü•¶", "üçá", "üçâ", "üçã", "ü•ù", "üçí"];

export default function Home() {
  const [selectedSubject, setSelectedSubject] = useState('');
  const [greeting, setGreeting] = useState('');
  const [emoji, setEmoji] = useState('');
  const router = useRouter();

  useEffect(() => {
    setGreeting(funnyGreetings[Math.floor(Math.random() * funnyGreetings.length)]);
    setEmoji(foodEmojis[Math.floor(Math.random() * foodEmojis.length)]);
  }, []);

  const handleStartQuiz = () => {
    if (selectedSubject) {
      router.push(`/quiz/${selectedSubject}`);
    }
  };

  const isSubjectSelected = selectedSubject !== '';

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-200 via-purple-100 to-blue-200 flex flex-col items-center justify-center p-4 sm:p-6 md:p-8">
      <main className="bg-white bg-opacity-80 backdrop-filter backdrop-blur-sm rounded-lg shadow-lg p-6 sm:p-8 max-w-md w-full transform transition-all duration-300 hover:shadow-xl">
        <div className="text-center mb-8">
          <div className="text-6xl mb-4 animate-bounce">{emoji}</div>
          <h1 className="text-3xl font-bold text-purple-600 mb-4">Ol√°, Let√≠cia!</h1>
          <p className="text-lg text-purple-700 italic px-4 font-light">{greeting}</p>
        </div>
        
        <div className="mb-8">
          <Select
            options={mockSubjects.map((subject: Subject) => ({ value: subject.id, label: subject.name }))}
            value={selectedSubject}
            onChange={setSelectedSubject}
            placeholder="Escolha uma mat√©ria (se tiver coragem)"
          />
        </div>
        
        <div className="space-y-4">
          <Button 
            onClick={handleStartQuiz} 
            disabled={!isSubjectSelected}
            fullWidth
          >
            {isSubjectSelected ? 'Iniciar Quiz (Boa sorte!)' : 'Selecione uma mat√©ria para come√ßar'}
          </Button>
          <Button 
            href="/history" 
            variant="secondary"
            fullWidth
          >
            Ver Hist√≥rico de Quizzes (Relembre o sofrimento)
          </Button>
        </div>
      </main>
      <footer className="mt-8 text-center text-purple-700">
        <p className="font-medium text-sm">Feito com üíñ e litros de caf√© para manter Let√≠cia acordada</p>
      </footer>
    </div>
  );
}
